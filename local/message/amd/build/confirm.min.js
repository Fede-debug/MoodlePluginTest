define("local_message/confirm",["exports","core/modal_save_cancel","core/str","jquery","core/modal_events"],(function(_exports,_modal_save_cancel,_str,_jquery,_modal_events){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Hook callbacks for usertours.
   *
   * @module     local_message
   * @copyright  Federico Diana
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_modal_save_cancel=_interopRequireDefault(_modal_save_cancel),_jquery=_interopRequireDefault(_jquery),_modal_events=_interopRequireDefault(_modal_events);const init=async button=>{const modal=await _modal_save_cancel.default.create({title:(0,_str.get_string)("message_deletion","local_message"),body:(0,_str.get_string)("delete_message_confirm","local_message")});window.console.log(button),modal.getRoot().on(_modal_events.default.shown,(e=>{let classListString=button.classList[0],messageid=classListString.substr(classListString.lastIndexOf("local_message")+"local_message".length);(void 0).params={messageid:messageid}})),modal.getRoot().on(_modal_events.default.save,(e=>{e.preventDefault(),window.console.log("id getroot"+modal.params)})),modal.setSaveButtonText((0,_str.get_string)("delete_button_modal","local_message")),modal.show()};_exports.init=init;function onDeleteButtonClick(){window.console.log(this),init.call(this,this)}document.querySelectorAll(".local_message_delete_button").forEach((button=>{button.addEventListener("click",onDeleteButtonClick)}))}));

//# sourceMappingURL=confirm.min.js.map