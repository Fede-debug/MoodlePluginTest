define("local_message/confirm",["exports","core/modal_save_cancel","core/str","core/modal_events"],(function(_exports,_modal_save_cancel,_str,_modal_events){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Hook callbacks for usertours.
   *
   * @module     local_message
   * @copyright  Federico Diana
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_modal_save_cancel=_interopRequireDefault(_modal_save_cancel),_modal_events=_interopRequireDefault(_modal_events);const init=async messageid=>{const modal=await _modal_save_cancel.default.create({title:(0,_str.get_string)("message_deletion","local_message"),body:(0,_str.get_string)("delete_message_confirm","local_message")});modal.params={messageid:messageid},modal.getRoot().on(_modal_events.default.save,(e=>{window.console.log("id getroot"+modal.params),e.preventDefault()})),modal.setSaveButtonText((0,_str.get_string)("delete_button_modal","local_message")),modal.show()};_exports.init=init;function onDeleteButtonClick(event){window.console.log("test"),Y.log("Y log test"),window.console.log(event.currentTarget.myParam),init.apply(event.currentTarget.myParam)}document.querySelectorAll(".local_message_delete_button").forEach((button=>{button.addEventListener("click",onDeleteButtonClick);let classListString=button.classList[0],myid=classListString.substr(classListString.lastIndexOf("local_message")+"local_message".length);button.myParam=myid}))}));

//# sourceMappingURL=confirm.min.js.map